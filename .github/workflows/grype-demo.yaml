# This workflow checks out code, builds an image, performs a container image
# scan, evaluates the image, and promotes it if it passes.

name: Grype Demo

on: 
#  push:
#    branches:
#      - main
#  schedule:
#    - cron: '42 20 * * 6'
  workflow_dispatch:
    branches:
      - main

  
jobs:

  Build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - name: Build Docker Image
      run: |
        docker build . --file Dockerfile --tag ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_SHA}       
    - name: Login to ghcr.io
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin
    - name: Push Docker Image
      run: |
        docker push ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_SHA}

  Grype-Check:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Install grype
      run: |
        sudo curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin
        export PATH="/usr/local/bin/:$PATH"
    - name: Generate Vulnerability Report 
      run: | 
        grype -o json -f critical ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_SHA} > $(basename ${GITHUB_REPOSITORY,,}).vuln.json
        # if we want to break the pipeline if vulnerabilities of a certain
        # severity are found, we can use the -f option e.g.
        # grype -o json -f high image:tag
        # if we don't want to gate on that and instead just want
        # to generate reports, just remove the -f flag.
    - name: Archive Vulnerability Report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: vuln-report
        path: ./*.vuln.json
        retention-days: 14

  Promote:
    needs: Grype-Check
    runs-on: ubuntu-latest
    steps:
    - name: Login to ghcr.io
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${GITHUB_ACTOR} --password-stdin
    - name: Re-Tag Image
      run: |
        docker pull ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_SHA}
        docker tag ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_SHA} ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_REF_NAME}
    - name: Push Docker Image
      run: |
        docker push ghcr.io/${GITHUB_REPOSITORY,,}:${GITHUB_REF_NAME}
